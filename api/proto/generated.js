/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response');
goog.provide('proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.k8s.io.api.core.v1.ContainerPort');
goog.require('proto.k8s.io.api.core.v1.EnvVar');
goog.require('proto.k8s.io.api.core.v1.LocalObjectReference');
goog.require('proto.k8s.io.api.core.v1.ServicePort');
goog.require('proto.k8s.io.api.core.v1.VolumeMount');
goog.require('proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.toObject = function(includeInstance, msg) {
  var f, obj = {
    spec: (f = msg.getSpec()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    case 2:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional MysqlSpec spec = 1;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.getSpec = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec, 1));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MysqlStatus status = 2;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.getStatus = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus, 2));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta.toObject(includeInstance, f),
    spec: (f = msg.getSpec()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta;
      reader.readMessage(value,proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.deserializeBinaryFromReader);
      msg.setSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;
 * @return {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.getMetadata = function() {
  return /** @type{?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta, 1));
};


/** @param {?proto.k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MysqlOperatorSpec spec = 2;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.getSpec = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec, 2));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.setSpec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.clearSpec = function() {
  this.setSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.prototype.hasSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    masterspec: (f = msg.getMasterspec()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.toObject(includeInstance, f),
    slavespec: (f = msg.getSlavespec()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.deserializeBinaryFromReader);
      msg.setMasterspec(value);
      break;
    case 2:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.deserializeBinaryFromReader);
      msg.setSlavespec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMasterspec();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.serializeBinaryToWriter
    );
  }
  f = message.getSlavespec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore.serializeBinaryToWriter
    );
  }
};


/**
 * optional MysqlCore masterSpec = 1;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.getMasterspec = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore, 1));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.setMasterspec = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.clearMasterspec = function() {
  this.setMasterspec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.hasMasterspec = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MysqlCore slaveSpec = 2;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.getSlavespec = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore, 2));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlCore|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.setSlavespec = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.clearSlavespec = function() {
  this.setSlavespec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperatorSpec.prototype.hasSlavespec = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.repeatedFields_, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.repeatedFields_ = [4,5,6,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getField(msg, 1),
    replicas: jspb.Message.getField(msg, 2),
    image: jspb.Message.getField(msg, 3),
    imagepullsecretsList: jspb.Message.toObjectList(msg.getImagepullsecretsList(),
    proto.k8s.io.api.core.v1.LocalObjectReference.toObject, includeInstance),
    envList: jspb.Message.toObjectList(msg.getEnvList(),
    proto.k8s.io.api.core.v1.EnvVar.toObject, includeInstance),
    volumemountsList: jspb.Message.toObjectList(msg.getVolumemountsList(),
    proto.k8s.io.api.core.v1.VolumeMount.toObject, includeInstance),
    containerportsList: jspb.Message.toObjectList(msg.getContainerportsList(),
    proto.k8s.io.api.core.v1.ContainerPort.toObject, includeInstance),
    serviceportsList: jspb.Message.toObjectList(msg.getServiceportsList(),
    proto.k8s.io.api.core.v1.ServicePort.toObject, includeInstance),
    role: jspb.Message.getField(msg, 9),
    serverconfig: (f = msg.getServerconfig()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReplicas(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 4:
      var value = new proto.k8s.io.api.core.v1.LocalObjectReference;
      reader.readMessage(value,proto.k8s.io.api.core.v1.LocalObjectReference.deserializeBinaryFromReader);
      msg.addImagepullsecrets(value);
      break;
    case 5:
      var value = new proto.k8s.io.api.core.v1.EnvVar;
      reader.readMessage(value,proto.k8s.io.api.core.v1.EnvVar.deserializeBinaryFromReader);
      msg.addEnv(value);
      break;
    case 6:
      var value = new proto.k8s.io.api.core.v1.VolumeMount;
      reader.readMessage(value,proto.k8s.io.api.core.v1.VolumeMount.deserializeBinaryFromReader);
      msg.addVolumemounts(value);
      break;
    case 7:
      var value = new proto.k8s.io.api.core.v1.ContainerPort;
      reader.readMessage(value,proto.k8s.io.api.core.v1.ContainerPort.deserializeBinaryFromReader);
      msg.addContainerports(value);
      break;
    case 8:
      var value = new proto.k8s.io.api.core.v1.ServicePort;
      reader.readMessage(value,proto.k8s.io.api.core.v1.ServicePort.deserializeBinaryFromReader);
      msg.addServiceports(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRole(value);
      break;
    case 10:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.deserializeBinaryFromReader);
      msg.setServerconfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImagepullsecretsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.k8s.io.api.core.v1.LocalObjectReference.serializeBinaryToWriter
    );
  }
  f = message.getEnvList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.k8s.io.api.core.v1.EnvVar.serializeBinaryToWriter
    );
  }
  f = message.getVolumemountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.k8s.io.api.core.v1.VolumeMount.serializeBinaryToWriter
    );
  }
  f = message.getContainerportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.k8s.io.api.core.v1.ContainerPort.serializeBinaryToWriter
    );
  }
  f = message.getServiceportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.k8s.io.api.core.v1.ServicePort.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getServerconfig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearName = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 replicas = 2;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setReplicas = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearReplicas = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.hasReplicas = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string image = 3;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setImage = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearImage = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.hasImage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated k8s.io.api.core.v1.LocalObjectReference imagePullSecrets = 4;
 * @return {!Array.<!proto.k8s.io.api.core.v1.LocalObjectReference>}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getImagepullsecretsList = function() {
  return /** @type{!Array.<!proto.k8s.io.api.core.v1.LocalObjectReference>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.LocalObjectReference, 4));
};


/** @param {!Array.<!proto.k8s.io.api.core.v1.LocalObjectReference>} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setImagepullsecretsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.LocalObjectReference=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.LocalObjectReference}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.addImagepullsecrets = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.k8s.io.api.core.v1.LocalObjectReference, opt_index);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearImagepullsecretsList = function() {
  this.setImagepullsecretsList([]);
};


/**
 * repeated k8s.io.api.core.v1.EnvVar env = 5;
 * @return {!Array.<!proto.k8s.io.api.core.v1.EnvVar>}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getEnvList = function() {
  return /** @type{!Array.<!proto.k8s.io.api.core.v1.EnvVar>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.EnvVar, 5));
};


/** @param {!Array.<!proto.k8s.io.api.core.v1.EnvVar>} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setEnvList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.EnvVar=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.EnvVar}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.addEnv = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.k8s.io.api.core.v1.EnvVar, opt_index);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearEnvList = function() {
  this.setEnvList([]);
};


/**
 * repeated k8s.io.api.core.v1.VolumeMount volumeMounts = 6;
 * @return {!Array.<!proto.k8s.io.api.core.v1.VolumeMount>}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getVolumemountsList = function() {
  return /** @type{!Array.<!proto.k8s.io.api.core.v1.VolumeMount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.VolumeMount, 6));
};


/** @param {!Array.<!proto.k8s.io.api.core.v1.VolumeMount>} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setVolumemountsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.VolumeMount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.VolumeMount}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.addVolumemounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.k8s.io.api.core.v1.VolumeMount, opt_index);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearVolumemountsList = function() {
  this.setVolumemountsList([]);
};


/**
 * repeated k8s.io.api.core.v1.ContainerPort containerPorts = 7;
 * @return {!Array.<!proto.k8s.io.api.core.v1.ContainerPort>}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getContainerportsList = function() {
  return /** @type{!Array.<!proto.k8s.io.api.core.v1.ContainerPort>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ContainerPort, 7));
};


/** @param {!Array.<!proto.k8s.io.api.core.v1.ContainerPort>} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setContainerportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.ContainerPort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ContainerPort}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.addContainerports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.k8s.io.api.core.v1.ContainerPort, opt_index);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearContainerportsList = function() {
  this.setContainerportsList([]);
};


/**
 * repeated k8s.io.api.core.v1.ServicePort servicePorts = 8;
 * @return {!Array.<!proto.k8s.io.api.core.v1.ServicePort>}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getServiceportsList = function() {
  return /** @type{!Array.<!proto.k8s.io.api.core.v1.ServicePort>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.k8s.io.api.core.v1.ServicePort, 8));
};


/** @param {!Array.<!proto.k8s.io.api.core.v1.ServicePort>} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setServiceportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.k8s.io.api.core.v1.ServicePort=} opt_value
 * @param {number=} opt_index
 * @return {!proto.k8s.io.api.core.v1.ServicePort}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.addServiceports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.k8s.io.api.core.v1.ServicePort, opt_index);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearServiceportsList = function() {
  this.setServiceportsList([]);
};


/**
 * optional string role = 9;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getRole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setRole = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearRole = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.hasRole = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional ServerConfig serverConfig = 10;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.getServerconfig = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig, 10));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.setServerconfig = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.clearServerconfig = function() {
  this.setServerconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlSpec.prototype.hasServerconfig = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    observedgeneration: jspb.Message.getField(msg, 1),
    replicas: jspb.Message.getField(msg, 2),
    updatedreplicas: jspb.Message.getField(msg, 3),
    readyreplicas: jspb.Message.getField(msg, 4),
    availablereplicas: jspb.Message.getField(msg, 5),
    unavailablereplicas: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setObservedgeneration(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReplicas(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUpdatedreplicas(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReadyreplicas(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAvailablereplicas(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUnavailablereplicas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int64 observedGeneration = 1;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.getObservedgeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.setObservedgeneration = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.clearObservedgeneration = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.hasObservedgeneration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 replicas = 2;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.getReplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.setReplicas = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.clearReplicas = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.hasReplicas = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 updatedReplicas = 3;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.getUpdatedreplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.setUpdatedreplicas = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.clearUpdatedreplicas = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.hasUpdatedreplicas = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 readyReplicas = 4;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.getReadyreplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.setReadyreplicas = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.clearReadyreplicas = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.hasReadyreplicas = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 availableReplicas = 5;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.getAvailablereplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.setAvailablereplicas = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.clearAvailablereplicas = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.hasAvailablereplicas = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 unavailableReplicas = 6;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.getUnavailablereplicas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.setUnavailablereplicas = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.clearUnavailablereplicas = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlStatus.prototype.hasUnavailablereplicas = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverId: jspb.Message.getField(msg, 1),
    host: jspb.Message.getField(msg, 2),
    user: jspb.Message.getField(msg, 3),
    password: jspb.Message.getField(msg, 4),
    logFile: jspb.Message.getField(msg, 5),
    logPosition: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setServerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogFile(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogPosition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional int32 server_id = 1;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.getServerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.setServerId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.clearServerId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.hasServerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string host = 2;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.setHost = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.clearHost = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.hasHost = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string user = 3;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.setUser = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.clearUser = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.hasUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string password = 4;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.clearPassword = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string log_file = 5;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.getLogFile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.setLogFile = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.clearLogFile = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.hasLogFile = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string log_position = 6;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.getLogPosition = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.setLogPosition = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.clearLogPosition = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.ServerConfig.prototype.hasLogPosition = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getField(msg, 1),
    result: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.clearCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string result = 2;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.setResult = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.clearResult = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.List.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: (f = msg.getCode()) && proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator;
      reader.readMessage(value,proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator.serializeBinaryToWriter
    );
  }
};


/**
 * optional MysqlOperator code = 1;
 * @return {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.prototype.getCode = function() {
  return /** @type{?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator} */ (
    jspb.Message.getWrapperField(this, proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator, 1));
};


/** @param {?proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.MysqlOperator|undefined} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.prototype.setCode = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.prototype.clearCode = function() {
  this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Mysql.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: jspb.Message.getField(msg, 1),
    data: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setService(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string service = 1;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.getService = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.setService = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.clearService = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string data = 2;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.setData = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.clearData = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Request.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.displayName = 'proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getField(msg, 1),
    result: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response;
  return proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.clearCode = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string result = 2;
 * @return {string}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.setResult = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.clearResult = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.github.com.nevercase.k8s_controller_custom_resource.api.proto.Response.prototype.hasResult = function() {
  return jspb.Message.getField(this, 2) != null;
};


