/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/nevercase/k8s-controller-custom-resource/pkg/apis/mysqloperator/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MysqlOperatorLister helps list MysqlOperators.
type MysqlOperatorLister interface {
	// List lists all MysqlOperators in the indexer.
	List(selector labels.Selector) (ret []*v1.MysqlOperator, err error)
	// MysqlOperators returns an object that can list and get MysqlOperators.
	MysqlOperators(namespace string) MysqlOperatorNamespaceLister
	MysqlOperatorListerExpansion
}

// mysqlOperatorLister implements the MysqlOperatorLister interface.
type mysqlOperatorLister struct {
	indexer cache.Indexer
}

// NewMysqlOperatorLister returns a new MysqlOperatorLister.
func NewMysqlOperatorLister(indexer cache.Indexer) MysqlOperatorLister {
	return &mysqlOperatorLister{indexer: indexer}
}

// List lists all MysqlOperators in the indexer.
func (s *mysqlOperatorLister) List(selector labels.Selector) (ret []*v1.MysqlOperator, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MysqlOperator))
	})
	return ret, err
}

// MysqlOperators returns an object that can list and get MysqlOperators.
func (s *mysqlOperatorLister) MysqlOperators(namespace string) MysqlOperatorNamespaceLister {
	return mysqlOperatorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MysqlOperatorNamespaceLister helps list and get MysqlOperators.
type MysqlOperatorNamespaceLister interface {
	// List lists all MysqlOperators in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.MysqlOperator, err error)
	// Get retrieves the MysqlOperator from the indexer for a given namespace and name.
	Get(name string) (*v1.MysqlOperator, error)
	MysqlOperatorNamespaceListerExpansion
}

// mysqlOperatorNamespaceLister implements the MysqlOperatorNamespaceLister
// interface.
type mysqlOperatorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MysqlOperators in the indexer for a given namespace.
func (s mysqlOperatorNamespaceLister) List(selector labels.Selector) (ret []*v1.MysqlOperator, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.MysqlOperator))
	})
	return ret, err
}

// Get retrieves the MysqlOperator from the indexer for a given namespace and name.
func (s mysqlOperatorNamespaceLister) Get(name string) (*v1.MysqlOperator, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("mysqloperator"), name)
	}
	return obj.(*v1.MysqlOperator), nil
}
