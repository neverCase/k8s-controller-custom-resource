/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/nevercase/k8s-controller-custom-resource/pkg/apis/mysqloperator/v1/generated.proto

package v1

import (
	fmt "fmt"

	proto "github.com/gogo/protobuf/proto"
	v11 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

func (m *MysqlCore) Reset()         { *m = MysqlCore{} }
func (m *MysqlCore) String() string { return proto.CompactTextString(m) }
func (*MysqlCore) ProtoMessage()    {}
func (*MysqlCore) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{0}
}
func (m *MysqlCore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlCore.Unmarshal(m, b)
}
func (m *MysqlCore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlCore.Marshal(b, m, deterministic)
}
func (m *MysqlCore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlCore.Merge(m, src)
}
func (m *MysqlCore) XXX_Size() int {
	return xxx_messageInfo_MysqlCore.Size(m)
}
func (m *MysqlCore) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlCore.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlCore proto.InternalMessageInfo

func (m *MysqlCore) GetSpec() *MysqlSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *MysqlCore) GetStatus() *MysqlStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *MysqlOperator) Reset()         { *m = MysqlOperator{} }
func (m *MysqlOperator) String() string { return proto.CompactTextString(m) }
func (*MysqlOperator) ProtoMessage()    {}
func (*MysqlOperator) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{1}
}
func (m *MysqlOperator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlOperator.Unmarshal(m, b)
}
func (m *MysqlOperator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlOperator.Marshal(b, m, deterministic)
}
func (m *MysqlOperator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlOperator.Merge(m, src)
}
func (m *MysqlOperator) XXX_Size() int {
	return xxx_messageInfo_MysqlOperator.Size(m)
}
func (m *MysqlOperator) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlOperator.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlOperator proto.InternalMessageInfo

func (m *MysqlOperator) GetMetadata() *v1.ObjectMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *MysqlOperator) GetSpec() *MysqlOperatorSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *MysqlOperatorList) Reset()         { *m = MysqlOperatorList{} }
func (m *MysqlOperatorList) String() string { return proto.CompactTextString(m) }
func (*MysqlOperatorList) ProtoMessage()    {}
func (*MysqlOperatorList) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{2}
}
func (m *MysqlOperatorList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlOperatorList.Unmarshal(m, b)
}
func (m *MysqlOperatorList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlOperatorList.Marshal(b, m, deterministic)
}
func (m *MysqlOperatorList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlOperatorList.Merge(m, src)
}
func (m *MysqlOperatorList) XXX_Size() int {
	return xxx_messageInfo_MysqlOperatorList.Size(m)
}
func (m *MysqlOperatorList) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlOperatorList.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlOperatorList proto.InternalMessageInfo

func (m *MysqlOperatorList) GetMetadata() *v1.ListMeta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *MysqlOperatorList) GetItems() []*MysqlOperator {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *MysqlOperatorSpec) Reset()         { *m = MysqlOperatorSpec{} }
func (m *MysqlOperatorSpec) String() string { return proto.CompactTextString(m) }
func (*MysqlOperatorSpec) ProtoMessage()    {}
func (*MysqlOperatorSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{3}
}
func (m *MysqlOperatorSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlOperatorSpec.Unmarshal(m, b)
}
func (m *MysqlOperatorSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlOperatorSpec.Marshal(b, m, deterministic)
}
func (m *MysqlOperatorSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlOperatorSpec.Merge(m, src)
}
func (m *MysqlOperatorSpec) XXX_Size() int {
	return xxx_messageInfo_MysqlOperatorSpec.Size(m)
}
func (m *MysqlOperatorSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlOperatorSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlOperatorSpec proto.InternalMessageInfo

func (m *MysqlOperatorSpec) GetMasterSpec() *MysqlCore {
	if m != nil {
		return m.MasterSpec
	}
	return nil
}

func (m *MysqlOperatorSpec) GetSlaveSpec() *MysqlCore {
	if m != nil {
		return m.SlaveSpec
	}
	return nil
}

func (m *MysqlSpec) Reset()         { *m = MysqlSpec{} }
func (m *MysqlSpec) String() string { return proto.CompactTextString(m) }
func (*MysqlSpec) ProtoMessage()    {}
func (*MysqlSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{4}
}
func (m *MysqlSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlSpec.Unmarshal(m, b)
}
func (m *MysqlSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlSpec.Marshal(b, m, deterministic)
}
func (m *MysqlSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlSpec.Merge(m, src)
}
func (m *MysqlSpec) XXX_Size() int {
	return xxx_messageInfo_MysqlSpec.Size(m)
}
func (m *MysqlSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlSpec proto.InternalMessageInfo

func (m *MysqlSpec) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *MysqlSpec) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *MysqlSpec) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

func (m *MysqlSpec) GetImagePullSecrets() []*v11.LocalObjectReference {
	if m != nil {
		return m.ImagePullSecrets
	}
	return nil
}

func (m *MysqlSpec) GetEnv() []*v11.EnvVar {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *MysqlSpec) GetVolumeMounts() []*v11.VolumeMount {
	if m != nil {
		return m.VolumeMounts
	}
	return nil
}

func (m *MysqlSpec) GetContainerPorts() []*v11.ContainerPort {
	if m != nil {
		return m.ContainerPorts
	}
	return nil
}

func (m *MysqlSpec) GetServicePorts() []*v11.ServicePort {
	if m != nil {
		return m.ServicePorts
	}
	return nil
}

func (m *MysqlSpec) GetRole() string {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return ""
}

func (m *MysqlSpec) GetServerConfig() *ServerConfig {
	if m != nil {
		return m.ServerConfig
	}
	return nil
}

func (m *MysqlStatus) Reset()         { *m = MysqlStatus{} }
func (m *MysqlStatus) String() string { return proto.CompactTextString(m) }
func (*MysqlStatus) ProtoMessage()    {}
func (*MysqlStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{5}
}
func (m *MysqlStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlStatus.Unmarshal(m, b)
}
func (m *MysqlStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlStatus.Marshal(b, m, deterministic)
}
func (m *MysqlStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlStatus.Merge(m, src)
}
func (m *MysqlStatus) XXX_Size() int {
	return xxx_messageInfo_MysqlStatus.Size(m)
}
func (m *MysqlStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlStatus.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlStatus proto.InternalMessageInfo

func (m *MysqlStatus) GetObservedGeneration() int64 {
	if m != nil && m.ObservedGeneration != nil {
		return *m.ObservedGeneration
	}
	return 0
}

func (m *MysqlStatus) GetReplicas() int32 {
	if m != nil && m.Replicas != nil {
		return *m.Replicas
	}
	return 0
}

func (m *MysqlStatus) GetUpdatedReplicas() int32 {
	if m != nil && m.UpdatedReplicas != nil {
		return *m.UpdatedReplicas
	}
	return 0
}

func (m *MysqlStatus) GetReadyReplicas() int32 {
	if m != nil && m.ReadyReplicas != nil {
		return *m.ReadyReplicas
	}
	return 0
}

func (m *MysqlStatus) GetAvailableReplicas() int32 {
	if m != nil && m.AvailableReplicas != nil {
		return *m.AvailableReplicas
	}
	return 0
}

func (m *MysqlStatus) GetUnavailableReplicas() int32 {
	if m != nil && m.UnavailableReplicas != nil {
		return *m.UnavailableReplicas
	}
	return 0
}

func (m *ServerConfig) Reset()         { *m = ServerConfig{} }
func (m *ServerConfig) String() string { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()    {}
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_331b1c7c7a035a4b, []int{6}
}
func (m *ServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig.Unmarshal(m, b)
}
func (m *ServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig.Marshal(b, m, deterministic)
}
func (m *ServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig.Merge(m, src)
}
func (m *ServerConfig) XXX_Size() int {
	return xxx_messageInfo_ServerConfig.Size(m)
}
func (m *ServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig proto.InternalMessageInfo

func (m *ServerConfig) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *ServerConfig) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *ServerConfig) GetUser() string {
	if m != nil && m.User != nil {
		return *m.User
	}
	return ""
}

func (m *ServerConfig) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *ServerConfig) GetLogFile() string {
	if m != nil && m.LogFile != nil {
		return *m.LogFile
	}
	return ""
}

func (m *ServerConfig) GetLogPosition() string {
	if m != nil && m.LogPosition != nil {
		return *m.LogPosition
	}
	return ""
}

func init() {
	proto.RegisterType((*MysqlCore)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.MysqlCore")
	proto.RegisterType((*MysqlOperator)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.MysqlOperator")
	proto.RegisterType((*MysqlOperatorList)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.MysqlOperatorList")
	proto.RegisterType((*MysqlOperatorSpec)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.MysqlOperatorSpec")
	proto.RegisterType((*MysqlSpec)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.MysqlSpec")
	proto.RegisterType((*MysqlStatus)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.MysqlStatus")
	proto.RegisterType((*ServerConfig)(nil), "github.com.nevercase.k8s_controller_custom_resource.pkg.apis.mysqloperator.v1.ServerConfig")
}

func init() {
	proto.RegisterFile("github.com/nevercase/k8s-controller-custom-resource/pkg/apis/mysqloperator/v1/generated.proto", fileDescriptor_331b1c7c7a035a4b)
}

var fileDescriptor_331b1c7c7a035a4b = []byte{
	// 791 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcd, 0x92, 0xe3, 0x34,
	0x10, 0xae, 0xfc, 0x6e, 0xac, 0xcc, 0x02, 0x2b, 0x38, 0x98, 0x70, 0x80, 0x4d, 0x71, 0xc8, 0x61,
	0x47, 0xde, 0xd9, 0xa2, 0xa8, 0x39, 0x93, 0x02, 0x6a, 0xa9, 0x4d, 0xed, 0x94, 0x42, 0x6d, 0x51,
	0x03, 0x54, 0x50, 0xe4, 0x1e, 0x47, 0x44, 0xb6, 0x8c, 0x24, 0x1b, 0xe6, 0xc4, 0x89, 0x03, 0x0f,
	0xc3, 0x33, 0xf0, 0x10, 0x3c, 0x07, 0xef, 0x40, 0x49, 0xce, 0xc4, 0xce, 0xcf, 0x00, 0x87, 0xc9,
	0x4d, 0x52, 0x7f, 0xfd, 0x7d, 0xfa, 0xba, 0x5b, 0x36, 0xfa, 0x3e, 0x11, 0x76, 0x55, 0x2c, 0x09,
	0x57, 0x69, 0x94, 0x41, 0x09, 0x9a, 0x33, 0x03, 0xd1, 0xfa, 0xd2, 0x9c, 0x73, 0x95, 0x59, 0xad,
	0xa4, 0x04, 0x7d, 0xce, 0x0b, 0x63, 0x55, 0x7a, 0xae, 0xc1, 0xa8, 0x42, 0x73, 0x88, 0xf2, 0x75,
	0x12, 0xb1, 0x5c, 0x98, 0x28, 0xbd, 0x35, 0x3f, 0x49, 0x95, 0x83, 0x66, 0x56, 0xe9, 0xa8, 0xbc,
	0x88, 0x12, 0xc8, 0xdc, 0x06, 0x62, 0x92, 0x6b, 0x65, 0x15, 0x9e, 0xd5, 0xf4, 0x64, 0x4b, 0x4f,
	0xd6, 0x97, 0x66, 0x51, 0xd3, 0x2f, 0x2a, 0xfa, 0xc5, 0x1d, 0x3d, 0xc9, 0xd7, 0x09, 0x71, 0xf4,
	0x64, 0x87, 0x9e, 0x94, 0x17, 0xa3, 0xf1, 0xfa, 0xd2, 0x10, 0xa1, 0x9c, 0x78, 0xc4, 0x95, 0x86,
	0x23, 0x92, 0xa3, 0x4f, 0x6a, 0x4c, 0xca, 0xf8, 0x4a, 0x64, 0xa0, 0x6f, 0x1b, 0x37, 0x06, 0xcb,
	0x8e, 0x65, 0x45, 0xf7, 0x65, 0xe9, 0x22, 0xb3, 0x22, 0x85, 0x83, 0x84, 0x4f, 0xff, 0x2b, 0xc1,
	0xf0, 0x15, 0xa4, 0x6c, 0x3f, 0x6f, 0xfc, 0x77, 0x0b, 0x05, 0x33, 0xe7, 0x6b, 0xaa, 0x34, 0x60,
	0x89, 0xba, 0x26, 0x07, 0x1e, 0xb6, 0x3e, 0x6a, 0x4d, 0x86, 0x2f, 0xbe, 0x21, 0x0f, 0x5a, 0x2e,
	0xe2, 0x75, 0xe6, 0x39, 0x70, 0xea, 0x55, 0xb0, 0x46, 0x7d, 0x63, 0x99, 0x2d, 0x4c, 0xd8, 0xf6,
	0x7a, 0xd7, 0x27, 0xd1, 0xf3, 0x0a, 0x74, 0xa3, 0x34, 0xfe, 0xab, 0x85, 0x1e, 0xfb, 0xf3, 0xd7,
	0x1b, 0x20, 0x7e, 0x85, 0x06, 0xae, 0x0b, 0x31, 0xb3, 0x6c, 0xe3, 0xfb, 0x39, 0xa9, 0x8a, 0x49,
	0x9a, 0xc5, 0x6c, 0xe8, 0x80, 0x65, 0x8e, 0xfe, 0xf5, 0xf2, 0x47, 0xe0, 0x76, 0x06, 0x96, 0xd1,
	0x2d, 0x03, 0xb6, 0x9b, 0x0a, 0x56, 0x8e, 0x7e, 0x38, 0x85, 0xa3, 0xbb, 0x9b, 0xd7, 0x95, 0x74,
	0xae, 0x9e, 0xec, 0xc4, 0x5e, 0x09, 0x63, 0xf1, 0x57, 0x07, 0xce, 0xc8, 0xff, 0x73, 0xe6, 0xb2,
	0xf7, 0x7c, 0x69, 0xd4, 0x13, 0x16, 0x52, 0xd7, 0xaa, 0xce, 0x64, 0xf8, 0xe2, 0xbb, 0x53, 0x1a,
	0xa3, 0x95, 0xd4, 0xf8, 0xb7, 0xf6, 0x9e, 0x2b, 0xe7, 0x18, 0xff, 0x82, 0x50, 0xca, 0x8c, 0x05,
	0xbf, 0x3b, 0xe5, 0xa4, 0xba, 0x17, 0x41, 0x1b, 0x5a, 0xb8, 0x44, 0x81, 0x91, 0xac, 0x84, 0x79,
	0xdd, 0xe0, 0xd3, 0x09, 0xd7, 0x52, 0xe3, 0x3f, 0xbb, 0x9b, 0x37, 0xea, 0x6f, 0x81, 0x51, 0x37,
	0x63, 0x29, 0x78, 0xe7, 0x01, 0xf5, 0x6b, 0x3c, 0x42, 0x03, 0x0d, 0xb9, 0x14, 0x9c, 0x55, 0x6f,
	0xa9, 0x47, 0xb7, 0x7b, 0xfc, 0x1e, 0xea, 0x89, 0x94, 0x25, 0x10, 0x76, 0x7c, 0x42, 0xb5, 0xc1,
	0x5f, 0xa3, 0x77, 0xfc, 0xe2, 0xaa, 0x90, 0x72, 0x0e, 0x5c, 0x83, 0x35, 0x61, 0xd7, 0xb7, 0x76,
	0xd2, 0x98, 0x11, 0xe2, 0xbe, 0x6a, 0x7e, 0x22, 0x14, 0x67, 0xb2, 0x1a, 0x78, 0x0a, 0x37, 0xa0,
	0x21, 0xe3, 0x40, 0x0f, 0x18, 0xf0, 0x33, 0xd4, 0x81, 0xac, 0x0c, 0x7b, 0x9e, 0x68, 0x74, 0x8c,
	0xe8, 0xf3, 0xac, 0x7c, 0xc3, 0x34, 0x75, 0x30, 0x3c, 0x45, 0x67, 0xa5, 0x92, 0x45, 0x0a, 0x33,
	0x55, 0x64, 0xd6, 0x84, 0x7d, 0x9f, 0xf6, 0xe1, 0xb1, 0xb4, 0x37, 0x35, 0x8e, 0xee, 0x24, 0xe1,
	0x97, 0xe8, 0x2d, 0x57, 0x69, 0xe6, 0x46, 0xf9, 0x4a, 0x69, 0x6b, 0xc2, 0x47, 0x9e, 0xe6, 0xe9,
	0x31, 0x9a, 0x69, 0x13, 0x49, 0xf7, 0x12, 0xdd, 0x7d, 0x0c, 0xe8, 0x52, 0x70, 0xa8, 0x88, 0x06,
	0xf7, 0xdf, 0x67, 0x5e, 0xe3, 0xe8, 0x4e, 0x92, 0x6b, 0x8f, 0x56, 0x12, 0xc2, 0xa0, 0x6a, 0x8f,
	0x5b, 0xe3, 0x5f, 0x2b, 0x62, 0xd0, 0x53, 0x95, 0xdd, 0x88, 0x24, 0x44, 0x7e, 0x76, 0xbe, 0x7d,
	0xe0, 0xd9, 0x99, 0x37, 0x24, 0xe8, 0x8e, 0xe0, 0xf8, 0xf7, 0x36, 0x1a, 0x36, 0xbe, 0x86, 0x98,
	0x20, 0xac, 0x96, 0x1e, 0x11, 0x7f, 0x59, 0xfd, 0x10, 0x84, 0xca, 0xfc, 0x44, 0x75, 0xe8, 0x91,
	0xc8, 0xbf, 0xce, 0xd7, 0x04, 0xbd, 0x5d, 0xe4, 0xb1, 0xfb, 0xa5, 0xd0, 0x3b, 0x48, 0xc7, 0x43,
	0xf6, 0x8f, 0xf1, 0xc7, 0xe8, 0xb1, 0x06, 0x16, 0xdf, 0x6e, 0x71, 0x5d, 0x8f, 0xdb, 0x3d, 0xc4,
	0xcf, 0xd0, 0x13, 0x56, 0x32, 0x21, 0xd9, 0x52, 0xc2, 0x16, 0xd9, 0xf3, 0xc8, 0xc3, 0x00, 0x7e,
	0x8e, 0xde, 0x2d, 0xb2, 0x43, 0x7c, 0xdf, 0xe3, 0x8f, 0x85, 0xc6, 0x7f, 0xb4, 0xd0, 0x59, 0xb3,
	0x54, 0xf8, 0x03, 0x14, 0x54, 0xc5, 0x5a, 0x88, 0xd8, 0xd7, 0xa0, 0x47, 0x07, 0xd5, 0xc1, 0xcb,
	0xd8, 0xb5, 0x73, 0xa5, 0x8c, 0xf5, 0xae, 0x03, 0xea, 0xd7, 0xee, 0xac, 0x30, 0xa0, 0x37, 0x0f,
	0xca, 0xaf, 0x5d, 0x85, 0x72, 0x66, 0xcc, 0xcf, 0x4a, 0xc7, 0xde, 0x56, 0x40, 0xb7, 0x7b, 0xfc,
	0x3e, 0x1a, 0x48, 0x95, 0x2c, 0x6e, 0x84, 0x04, 0x6f, 0x24, 0xa0, 0x8f, 0xa4, 0x4a, 0xbe, 0x10,
	0x12, 0xf0, 0x53, 0x74, 0xe6, 0x42, 0xb9, 0x32, 0xc2, 0xb7, 0xa0, 0xef, 0xc3, 0x43, 0xa9, 0x92,
	0xab, 0xcd, 0xd1, 0x67, 0xdd, 0xeb, 0x76, 0x79, 0xf1, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1,
	0xb5, 0x77, 0x33, 0x19, 0x09, 0x00, 0x00,
}
